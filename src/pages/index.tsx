import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Landing Page</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-gradient-to-b from-[#ebf4f5] to-[#b5c6e0]">
        <NavBar/>
        <div className="flex min-h-screen flex-col items-center justify-center ">
          <div className="container flex flex-col gap-12 px-4 py-16 items-center justify-center ">
            {/* Header */}
            <div className="text-7xl font-light font-grotesk tracking-wide">
              Analytics
            </div>
            <div className="text-lg font-light font-grotesk tracking-tight">
              Insights at the speed of thought.
            </div>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const NavBar: React.FC = () => {
  return (
    <>
      <div className="container flex col-auto px-10 py-10">
        <Link
          className=""
          href=""
          target=""
        >
          <div className="text-md font-sans mx-5 tracking-widest">Services</div>
        </Link>
        <Link
          className=""
          href=""
          target=""
        >
          <div className="text-md font-sans mx-5 tracking-widest">Contact</div>
        </Link>
        <Link
          className=""
          href=""
          target=""
        >
          <div className="text-md font-sans mx-5 tracking-widest">About</div>
        </Link>
      </div>
    </>
  )
}

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return null;
};
