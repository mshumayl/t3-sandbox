import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import NavBar from "../components/NavBar"
import AdminLayout from "../components/AdminLayout"


import { trpc } from "../utils/trpc";


const Admin: NextPage = () => {
    // const hello = trpc.example.hello.useQuery({ text: "from tRPC" });
  
    return (
      <>
        <Head>
          <title>Admin Page</title>
          <meta name="description" content="Generated by create-t3-app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className="flex min-w-screen flex-col bg-gradient-to-b from-[#2e026d] to-[#15162cbg-gradient-to-b from-[#ebf4f5] to-[#b5c6e0] min-h-screen">
          <NavBar />
          <div className="flex flex-col px-20 py-5">
            <h1 className="font-grotesk text-4xl">Admin Page</h1>
          </div>
          <AdminData />
        </main>
      </>
    );
  };
  
export default Admin;

const AdminData: React.FC = () => {
    const { data: sessionData } = useSession();
  
    const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
      undefined, // no input
      { enabled: sessionData?.user !== undefined },
    );

    // if (!sessionData)

    
    return (
      <div className="flex flex-col items-center justify-center gap-4">
        <p className="text-center text-2xl text-black">
          {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
          {sessionData && <AdminLayout/>}
          {secretMessage && <span> - {secretMessage}</span>}
        </p>
      </div>
    );
  };
  